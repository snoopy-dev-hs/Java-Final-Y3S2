/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atm_machine_transaction;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import atm_machine_transaction.ClsGetDataFile;
import static atm_machine_transaction.frmCashDesposit.setVarialed;

/**
 *
 * @author Heng-Sok
 */
public class frmCashTransfer extends javax.swing.JFrame {

    /// Get File to Read
    File dataFile = new File("src/atm_machine_transaction/data.txt");

    /// Make Object from Main Form
    frmAtmMachine frmMain = new frmAtmMachine();

    /// Account No
    String accNo = "";

    /**
     * Creates new form frmCashTransfer
     */
    public frmCashTransfer() {
        initComponents();

//        accNo = "1111";
    }
    
    public frmCashTransfer(String accNo) {
        initComponents();

        this.accNo = accNo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inp_accountNo = new javax.swing.JTextField();
        inp_amount = new javax.swing.JTextField();
        btn_transfer = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        inp_accountPwd = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel1.setText("Cash Transfer");

        btn_back.setFont(new java.awt.Font("Hack", 0, 14)); // NOI18N
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Hack", 0, 14)); // NOI18N
        jLabel2.setText("Account No");

        jLabel3.setFont(new java.awt.Font("Hack", 0, 14)); // NOI18N
        jLabel3.setText("Amount");

        inp_accountNo.setFont(new java.awt.Font("Hack", 0, 14)); // NOI18N

        inp_amount.setFont(new java.awt.Font("Hack", 0, 14)); // NOI18N

        btn_transfer.setFont(new java.awt.Font("Hack", 0, 14)); // NOI18N
        btn_transfer.setText("Transfer");
        btn_transfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_transferActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Hack", 0, 14)); // NOI18N
        jLabel4.setText("Password");

        inp_accountPwd.setFont(new java.awt.Font("Hack", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_back)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addComponent(inp_accountNo)
                        .addComponent(inp_amount)
                        .addComponent(inp_accountPwd))
                    .addComponent(btn_transfer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_back)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inp_accountNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inp_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inp_accountPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_transfer)
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        /// Button Back

        frmMain.moveToMain(accNo);
        this.dispose();
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_transferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_transferActionPerformed
        // TODO add your handling code here:
        /// Button Submit

        String inpAccNo = "";
        int inpAmount = 0;
        String inpAccPwd = "";

        /// - Protect Fields
        if (inp_accountNo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill in Account No !", "Cash Transfer", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (inp_amount.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill in Amount !", "Cash Transfer", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (inp_accountPwd.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill in Account Passwd !", "Cash Transfer", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (!frmMain.isNumeric(inp_accountNo.getText())) {
            inp_accountNo.setText("");
            return;
        }
        if (!frmMain.isNumeric(inp_amount.getText())) {
            inp_amount.setText("");
            return;
        }

        inpAccNo = inp_accountNo.getText();
        

        /// - Check Data
        /// Get All Data for Transfer
        ClsGetDataFile clsDataTransfer = new ClsGetDataFile(inpAccNo);
        try {
            clsDataTransfer.getAllData();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmCashTransfer.class.getName()).log(Level.SEVERE, null, ex);
        }

        /// Get All Data
        ClsGetDataFile clsData = new ClsGetDataFile(accNo);
        try {
            clsData.getAllData();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmCashTransfer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        inpAmount = Integer.parseInt(inp_amount.getText());
        inpAccPwd = inp_accountPwd.getText();
        
        /// Check Account No
        if (inpAccNo == null ? clsDataTransfer.getAccNo() != null : !inpAccNo.equals(clsDataTransfer.getAccNo())) {
            JOptionPane.showMessageDialog(null, "Account Number don't have in System !", "Cash Transfer", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        /// Check a same Account
        if (inpAccNo.equals(clsData.getAccNo())) {
            JOptionPane.showMessageDialog(null, "Account Number is Invalid !", "Cash Transfer", JOptionPane.WARNING_MESSAGE);
            inp_accountNo.setText("");
            return;
        }
        
        /// Check Amount
        if (clsData.getAccBalance() < inpAmount) {
            JOptionPane.showMessageDialog(null, "Insufficient account balance for this Transaction !", "Cash Transfer", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        /// Check Password
        if (!inpAccPwd.equals(clsData.getAccPwd())) {
            JOptionPane.showMessageDialog(null, "Password is Invalid !", "Cash Transfer", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        /// - Update Cash To Transfer
        try {
            String repData = clsDataTransfer.getAccId() + "@@" + clsDataTransfer.getAccName() + "@@" + clsDataTransfer.getAccNo() + "@@" + clsDataTransfer.getAccPwd()+ "@@" + (clsDataTransfer.getAccBalance()  + inpAmount) + "@@" + clsDataTransfer.getAccStatus();
            frmMain.updateDataInFile(clsDataTransfer.getAccNumOfLine(), repData);
        } catch (IOException ex) {
            Logger.getLogger(frmCashDesposit.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        /// - Update Cash from your Account
        try {
            String repData = clsData.getAccId() + "@@" + clsData.getAccName() + "@@" + clsData.getAccNo() + "@@" + clsData.getAccPwd()+ "@@" + (clsData.getAccBalance() - inpAmount) + "@@" + clsData.getAccStatus();
            frmMain.updateDataInFile(clsData.getAccNumOfLine(), repData);
        } catch (IOException ex) {
            Logger.getLogger(frmCashDesposit.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        frmMain.moveToMain(accNo);
        
    }//GEN-LAST:event_btn_transferActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCashTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCashTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCashTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCashTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCashTransfer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_transfer;
    private javax.swing.JTextField inp_accountNo;
    private javax.swing.JPasswordField inp_accountPwd;
    private javax.swing.JTextField inp_amount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
